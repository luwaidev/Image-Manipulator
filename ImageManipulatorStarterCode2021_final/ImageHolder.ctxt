#BlueJ class context
comment0.target=ImageHolder
comment0.text=\r\n\ <p>ImageHolder\ contains\ two\ images\ -\ a\ full\ size\ image\ and\ a\ display\ image.</p>\r\n\ \r\n\ <p>Most\ cameras\ take\ photos\ that\ are\ at\ least\ 12\ "Megapixels,"\ which\ usually\r\n\ means\ images\ that\ are\ 4000x3000\ pixels\ or\ larger.\ Computer\ screens\ are\ usually\ \r\n\ somewhere\ between\ "1080p"\ (1920x1080)\ and\ "4K\ /\ UHD"\ (3840x2160).\ As\ well\ as\ the\r\n\ computer\ displays\ being\ significantly\ smaller\ to\ start\ with,\ we\ also\ need\ room\ for\r\n\ the\ user\ interface,\ the\ Windows/Mac\ task\ bar,\ etc.\ So,\ this\ class\ serves\ to\ manage\r\n\ one\ image\ to\ actually\ alter\ and\ manipulate,\ and\ another\ to\ display.</p>\r\n\ \r\n\ <p>If\ the\ image\ is\ smaller\ than\ the\ max\ displayable\ image\ size\ (set\ by\ constants\ in\ the\ Background)\r\n\ then\ the\ display\ image\ and\ the\ full\ image\ will\ be\ the\ same,\ but\ will\ be\ processed\ in\ the\ same\ \r\n\ manner\ as\ if\ they\ were\ different.</p>\r\n\ \r\n\ <p>When\ you\ apply\ an\ effect\ to\ the\ image,\ you\ must\ complete\ three\ steps\ as\ demonstrated\ in\r\n\ the\ bluify\ example\:</p>\r\n\ \r\n\ <ol><li>Call\ the\ image\ manipulation\ method\ on\ getBufferedImage()\ from\ this\ class\:<br>\r\n\ <code>Processor.blueify(image.getBufferedImage());</code></li>\r\n\ <li>\ Call\ the\ redraw\ method,\ to\ recalculate\ scale\ and\ update\ the\ displayed\ image\:<br>\r\n\ <code>image.redraw();</code>\r\n\ <li>\ Update\ the\ info\ displayed\ in\ the\ World\ (optional\ -\ this\ might\ vary\ depending\ on\ your\ UI)<br>\r\n\ <code>openFile.update\ (image.getDetails\ ());</li></ol>\r\n\ \r\n\ @author\ Jordan\ Cohen\r\n\ @version\ 2.0\ -\ December\ 2021\r\n\ @since\ November\ 2013\r\n
comment1.params=fileName
comment1.target=ImageHolder(java.lang.String)
comment1.text=\r\n\ Construct\ an\ ImageHolder\ with\ a\ file\ name.\ If\ there\ is\ an\ error,\ \r\n\ show\ a\ blank\ GreenfootImage.\r\n\ \r\n\ @param\ fileName\ \ Name\ of\ image\ file\ to\ be\ displayed.\r\n
comment10.params=newImage
comment10.target=void\ setNewImage(greenfoot.GreenfootImage)
comment10.text=\r\n\ Set\ a\ new\ image\ to\ this\ Image\ Holder.\ Provide\ a\ full\ size\ image\ and\r\n\ redraw()\ will\ also\ update\ the\ scale\ and\ displayImage.\ Note\ that\ this\r\n\ is\ only\ required\ when\ altering\ the\ current\ image\ is\ not\ possible\ (for\ example,\r\n\ when\ rotating\ the\ image\ and\ thus\ creating\ an\ image\ of\ a\ new\ size).\r\n\ \r\n\ @param\ GreenfootImage\ the\ new\ image\ to\ insert\ into\ this\ Image\ holder.\ \r\n
comment2.params=path\ fileName
comment2.target=boolean\ openFile(java.lang.String,\ java.lang.String)
comment2.text=\r\n\ Attempt\ to\ open\ a\ file\ and\ assign\ it\ as\ this\ Actor's\ image\r\n\ \r\n\ @param\ fileName\ \ Name\ of\ the\ image\ file\ to\ open\ (must\ be\ in\ this\ directory)\r\n\ @return\ boolean\ \ True\ if\ operation\ successful,\ otherwise\ false\r\n
comment3.params=
comment3.target=double\ getScale()
comment3.text=\r\n\ Get\ the\ scale\ that\ was\ used\ to\ convert\ the\ full\ size\ image\ to\ the\r\n\ display\ image.\ \r\n\ \r\n\ @return\ double\ \ \ the\ scale,\ as\ a\ percentage\r\n
comment4.params=
comment4.target=int\ getRealWidth()
comment4.text=\r\n\ Get\ the\ width\ of\ the\ full\ size\ backing\ image\r\n\ \r\n\ @return\ int\ the\ actual\ width\ of\ the\ image,\ in\ pixels\ \ \ \r\n
comment5.params=
comment5.target=int\ getRealHeight()
comment5.text=\r\n\ Get\ the\ height\ of\ the\ full\ size\ backing\ image\r\n\ \r\n\ @return\ int\ the\ actual\ height\ of\ the\ image,\ in\ pixels\ \ \ \r\n
comment6.params=
comment6.target=java.lang.String[]\ getDetails()
comment6.text=\r\n\ Return\ two\ Strings\ in\ an\ array\ that\ contain\ details\ about\ the\ currently\ open\ file.\r\n\ <p>\r\n\ This\ is\ what\ you\ see\ in\ the\ text\ box\ in\ World.\ This\ should\ be\ called\ after\ redraw()\ to\ ensure\r\n\ that\ the\ scale\ is\ up\ to\ date.\r\n\ <p>\r\n\ Note\ -\ you\ are\ welcome\ to\ make\ additional\ accessors\ to\ get\ at\ these\ details\ in\ a\ different\ format.\r\n\ \r\n\ @return\ String[]\ \ \ \ \ an\ array\ containing\ the\ file\ name\ on\ the\ first\ line\ and\ the\ scale,\ width\ and\ height\ on\ the\ second\ line\r\n
comment7.params=
comment7.target=void\ redraw()
comment7.text=\r\n\ This\ method\ will\ <b>reclaculate\ scale</b>\ and\ <b>update\ the\ displayImage</b>.\ \r\n\ <p>\r\n\ You\ should\ always\ update\ the\ fullImage\ before\ calling\ this\ method.\r\n\ For\ example,\ blueify\ applies\ the\ blue\ effect\ and\ then\ calls\ this.\r\n\ <p>\r\n\ Note\ -\ this\ is\ a\ fairly\ new\ method.\ If\ you\ run\ into\ issues\ with\ \r\n\ the\ scaling\ algorithm,\ please\ let\ me\ know.\r\n
comment8.params=
comment8.target=java.awt.image.BufferedImage\ getBufferedImage()
comment8.text=\r\n\ Allows\ access\ to\ the\ full\ image\ for\ modification\r\n\ \r\n\ @return\ BufferedImage\ returns\ the\ backing\ image\ for\ this\ Actor\ as\ an\ AwtImage\r\n
comment9.params=
comment9.target=greenfoot.GreenfootImage\ getDisplayImage()
comment9.text=\r\n\ Accessor\ for\ the\ (low\ resolution)\ display\ image.\r\n\ \r\n\ @return\ GreenfootImage\ the\ image\ being\ displayed.\ If\ there\ is\ a\ larger\ image\ that\ has\ been\ scaled,\ this\ will\ be\ the\ smaller,\ lower\ resolution\ image.\r\n
numComments=11
