#BlueJ class context
comment0.target=Background
comment0.text=\r\n\ Starter\ code\ for\ Image\ Manipulation\ Array\ Assignment.\r\n\ \r\n\ The\ class\ Processor\ contains\ all\ of\ the\ code\ to\ actually\ perform\r\n\ transformation.\ The\ rest\ of\ the\ classes\ serve\ to\ support\ that\r\n\ capability.\ This\ World\ allows\ the\ user\ to\ choose\ transformations\r\n\ and\ open\ files.\r\n\ \r\n\ Add\ to\ it\ and\ make\ it\ your\ own\!\r\n\ \r\n\ @author\ Jordan\ Cohen\r\n\ @version\ November\ 2013\r\n
comment1.params=
comment1.target=Background()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Background.\r\n\ \r\n
comment10.params=bi
comment10.target=void\ SetImage(java.awt.image.BufferedImage)
comment11.params=imgA\ imgB
comment11.target=boolean\ compareImages(java.awt.image.BufferedImage,\ java.awt.image.BufferedImage)
comment11.text=\r\n\ Compares\ two\ images\ pixel\ by\ pixel.\r\n\r\n\ @param\ imgA\ the\ first\ image.\r\n\ @param\ imgB\ the\ second\ image.\r\n\ @return\ whether\ the\ images\ are\ both\ the\ same\ or\ not.\r\n\ \r\n\ Taken\ from\ https\://stackoverflow.com/questions/11006394/is-there-a-simple-way-to-compare-bufferedimage-instances\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Act()\ method\ just\ checks\ for\ mouse\ input\r\n
comment3.params=
comment3.target=void\ checkMouse()
comment4.params=
comment4.target=void\ updateHistory()
comment5.params=
comment5.target=void\ changingImage()
comment6.params=
comment6.target=void\ saveFile()
comment7.params=
comment7.target=void\ openFile()
comment7.text=\r\n\ Allows\ the\ user\ to\ open\ a\ new\ image\ file.\r\n
comment8.params=newBi
comment8.target=greenfoot.GreenfootImage\ createGreenfootImageFromBI(java.awt.image.BufferedImage)
comment8.text=\r\n\ Takes\ in\ a\ BufferedImage\ and\ returns\ a\ GreenfootImage.\r\n\ \r\n\ @param\ newBi\ The\ BufferedImage\ to\ convert.\r\n\ \r\n\ @return\ GreenfootImage\ \ \ A\ GreenfootImage\ built\ from\ the\ BufferedImage\ provided.\r\n
comment9.params=bi
comment9.target=java.awt.image.BufferedImage\ deepCopy(java.awt.image.BufferedImage)
numComments=12
